{"version":3,"sources":["pages/Login.js","actions/index.js","Componente/Header.js","Componente/TableExpenses.js","Componente/ExpensesForm.js","pages/Wallet.js","App.js","serviceWorker.js","reducers/user.js","reducers/wallet.js","reducers/index.js","store/index.js","index.js"],"names":["Login","state","email","password","isDisabled","handleChange","bind","validateLogin","handleClick","target","name","value","this","setState","test","length","event","preventDefault","props","addUser","history","push","className","data-testid","id","type","placeholder","onChange","disabled","onClick","React","Component","connect","dispatch","Header","expenses","conversion","map","object","exchangeRates","currency","ask","reduce","prev","acc","Number","toFixed","htmlFor","user","wallet","Table","del","filter","item","handleEdit","actionEdit","method","tag","description","isValid","key","ExpensesForm","onInputChange","a","fetch","response","json","expense","obj","editClick","editId","update","arr","edit","currencies","buttonExpenses","currencie","Wallet","Object","keys","code","console","log","App","exact","path","component","Boolean","window","location","hostname","match","INITIAL_STATE","action","rootReducer","combineReducers","store","createStore","reducer","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.2da6f9e0.chunk.js","sourcesContent":["import React from 'react';\n\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { action } from '../actions/index';\nimport './Login.css';\n\nclass Login extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      email: '',\n      password: '',\n      isDisabled: true,\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.validateLogin = this.validateLogin.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleChange({ target }) {\n    const { name, value } = target;\n    this.setState({\n      [name]: value,\n    }, () => this.validateLogin());\n  }\n\n  validateLogin() {\n    const { email, password } = this.state;\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    const minNumber = 6;\n    if (emailRegex.test(email) && password.length >= minNumber) {\n      this.setState({\n        isDisabled: false,\n      });\n    } else {\n      this.setState({\n        isDisabled: true,\n      });\n    }\n  }\n\n  handleClick(event) {\n    event.preventDefault();\n    const { addUser, history } = this.props;\n    const { email } = this.state;\n    addUser(email);\n    history.push('/carteira');\n  }\n\n  render() {\n    const { email, password, isDisabled } = this.state;\n    return (\n      <div className=\"login\">\n        <form>\n          <div className=\"login-title\">\n            <h3 className=\"login-h3\">TrybeWallet</h3>\n          </div>\n          <input\n            data-testid=\"email-input\"\n            className=\"input-login\"\n            id=\"email\"\n            type=\"email\"\n            placeholder=\"email\"\n            value={ email }\n            name=\"email\"\n            onChange={ this.handleChange }\n          />\n          <input\n            data-testid=\"password-input\"\n            className=\"input-login\"\n            id=\"password\"\n            type=\"password\"\n            placeholder=\"senha\"\n            value={ password }\n            name=\"password\"\n            onChange={ this.handleChange }\n          />\n          <button\n            className=\"button-login\"\n            type=\"submit\"\n            disabled={ isDisabled }\n            onClick={ this.handleClick }\n          >\n            Entrar\n          </button>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  addUser: (email) => dispatch(action(email)),\n});\n\nLogin.propTypes = {\n  addUser: PropTypes.func,\n  history: PropTypes.shape({\n    push: PropTypes.func,\n  }),\n}.isRequired;\n\nexport default connect(null, mapDispatchToProps)(Login);\n","export const NEW_ACTION = 'NEW_ACTION';\nexport const NEW_EXPENSES = 'NEW_EXPENSES';\nexport const GET_CURRENCIES = 'GET_CURRENCIES';\nexport const DELETE = 'DELETE';\nexport const EDIT = 'EDIT';\nexport const UPDATE_INFOS = 'UPDATE_INFOS';\n\n// Coloque aqui suas actions\nexport const action = (state) => ({ type: NEW_ACTION, state });\n\nexport const actionExpense = (state) => ({ type: NEW_EXPENSES, state });\n\nexport const getCurrencies = (state) => ({ type: GET_CURRENCIES, state });\n\nexport const actionDelete = (state) => ({ type: DELETE, state });\n\nexport const actionEdit = (id) => ({ type: EDIT, id });\n\nexport const updateInfos = (state) => ({\n  type: UPDATE_INFOS,\n  state,\n});\n\nexport function fecthAPI() {\n  return async (dispatch) => {\n    try {\n      const response = await fetch('https://economia.awesomeapi.com.br/json/all');\n      const json = await response.json();\n      const currencie = Object.keys(json).filter((code) => code !== 'USDT');\n      dispatch(getCurrencies(currencie));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n}\n","import React from 'react';\n\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport './Header.css';\n\nclass Header extends React.Component {\n  render() {\n    const { email, expenses } = this.props;\n    const conversion = expenses.length === 0 ? 0 : expenses.map(\n      (object) => object.exchangeRates[object.currency].ask * object.value,\n    ).reduce((prev, acc) => Number(prev) + Number(acc), 0).toFixed(2);\n    return (\n      <div className=\"header-container\">\n        <header>\n          <label className=\"label-email\" htmlFor=\"email\">\n            Email:\n            <p className=\"email\" id=\"email\" data-testid=\"email-field\">\n              {email}\n            </p>\n          </label>\n          <div className=\"container-total-expenses\">\n            Despesa total:\n            <p\n              className=\"total-field\"\n              data-testid=\"total-field\"\n              name=\"despesa-total\"\n            >\n              {conversion}\n            </p>\n          </div>\n          <div className=\"header-currency-field-container\">\n            <p data-testid=\"header-currency-field\">BRL</p>\n          </div>\n        </header>\n      </div>\n    );\n  }\n}\n\nHeader.propTypes = {\n  email: PropTypes.string,\n  expenses: PropTypes.object,\n}.isRequired;\n\nconst mapStateToProps = (state) => ({\n  email: state.user.email,\n  expenses: state.wallet.expenses,\n});\n\nexport default connect(mapStateToProps, null)(Header);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { actionDelete, actionEdit } from '../actions';\nimport './TableExpenses.css';\n\nclass Table extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      value: '',\n      currency: 'USD',\n      method: 'Dinheiro',\n      tag: 'Alimentação',\n      description: '',\n      isValid: false,\n    };\n  }\n\n  handleClick = ({ target }) => {\n    const { expenses, dispatch } = this.props;\n    const del = expenses.filter((item) => item.id !== Number(target.id));\n    dispatch(actionDelete(del));\n  }\n\n  handleEdit = (id) => {\n    const { dispatch } = this.props;\n    dispatch(actionEdit(id));\n  }\n\n  render() {\n    const { expenses } = this.props;\n    const { value, currency, method, tag, description, isValid } = this.state;\n    return (\n      <div className=\"table-container\">\n        <table>\n          <thead>\n            <tr>\n              <th>Descrição</th>\n              <th>Tag</th>\n              <th>Método de pagamento</th>\n              <th>Valor</th>\n              <th>Moeda</th>\n              <th>Câmbio utilizado</th>\n              <th>Valor convertido</th>\n              <th>Moeda de conversão</th>\n              <th>Editar/Excluir</th>\n            </tr>\n          </thead>\n          <tbody>\n            { isValid\n              ? (\n                <tr>\n                  <td>{ description }</td>\n                  <td>{ tag }</td>\n                  <td>{ method }</td>\n                  <td>{ value }</td>\n                  <td>{ currency }</td>\n                </tr>)\n              : (expenses.map((object) => (\n                <tr key={ object.id }>\n                  <td>{ object.description }</td>\n                  <td>{ object.tag }</td>\n                  <td>{ object.method }</td>\n                  <td>{ Number(object.value).toFixed(2) }</td>\n                  <td>{ object.exchangeRates[object.currency].name }</td>\n                  <td>\n                    { Number(object.exchangeRates[object.currency].ask).toFixed(2) }\n                  </td>\n                  <td>\n                    {Number(object.value * object.exchangeRates[object.currency]\n                      .ask).toFixed(2)}\n                  </td>\n                  <td>Real</td>\n                  <td>\n                    <button\n                      data-testid=\"edit-btn\"\n                      type=\"button\"\n                      id={ object.id }\n                      onClick={ () => this.handleEdit(object.id) }\n                    >\n                      Editar\n                    </button>\n                    <button\n                      data-testid=\"delete-btn\"\n                      type=\"reset\"\n                      id={ object.id }\n                      onClick={ this.handleClick }\n                    >\n                      Excluir\n                    </button>\n                  </td>\n                </tr>\n              )))}\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n}\n\nTable.propTypes = {\n  expenses: PropTypes.array,\n  isValid: PropTypes.bool,\n}.isRequired;\n\nconst mapStateToProps = (state) => ({\n  expenses: state.wallet.expenses,\n});\n\nexport default connect(mapStateToProps)(Table);\n","import React from 'react';\n\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { actionExpense, updateInfos } from '../actions';\nimport Table from './TableExpenses';\nimport './ExpensesForm.css';\n\nconst Alimentacao = 'Alimentação';\n\nclass ExpensesForm extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      value: '',\n      currency: 'USD',\n      method: 'Dinheiro',\n      tag: Alimentacao,\n      description: '',\n    };\n  }\n\n  onInputChange = ({ target }) => {\n    const { id, value } = target;\n    this.setState({\n      [id]: value,\n    });\n  };\n\n  handleClick = async () => {\n    const response = await fetch('https://economia.awesomeapi.com.br/json/all');\n    const json = await response.json();\n    const { value, currency, method, tag, description } = this.state;\n    const { expense, expenses } = this.props;\n    const obj = {\n      id: expenses.length,\n      value,\n      currency,\n      method,\n      tag,\n      description,\n      exchangeRates: json,\n    };\n    expense(obj);\n    this.setState({\n      value: '',\n      currency: 'USD',\n      method: 'Dinheiro',\n      tag: Alimentacao,\n      description: '',\n    });\n  }\n\n  editClick = (event) => {\n    event.preventDefault();\n    const { expenses, editId, update } = this.props;\n    const { value, currency, method, tag, description } = this.state;\n\n    const arr = [...expenses];\n    const edit = arr[Number(editId)];\n\n    edit.value = value;\n    edit.description = description;\n    edit.currency = currency;\n    edit.method = method;\n    edit.tag = tag;\n\n    update(arr);\n    this.setState({\n      value: '',\n      currency: 'USD',\n      method: 'Dinheiro',\n      tag: Alimentacao,\n      description: '',\n    });\n  }\n\n  render() {\n    const { currencies, buttonExpenses } = this.props;\n    const { value, currency, method, tag, description } = this.state;\n    return (\n      <div className=\"expenses-form-container\">\n        <form className=\"expenses-form\">\n          <label className=\"label-value\" htmlFor=\"value\">\n            Valor:\n            <input\n              className=\"value-input\"\n              data-testid=\"value-input\"\n              id=\"value\"\n              type=\"number\"\n              value={ value }\n              onChange={ this.onInputChange }\n            />\n          </label>\n          <label className=\"label-value\" htmlFor=\"currency\">\n            Moeda:\n            <select\n              className=\"currency-input\"\n              data-testid=\"currency-input\"\n              id=\"currency\"\n              value={ currency }\n              onChange={ this.onInputChange }\n            >\n              { currencies.map((currencie) => (\n                <option\n                  key={ currencie }\n                  value={ currencie }\n                >\n                  { currencie }\n                </option>\n              ))}\n            </select>\n          </label>\n          <label className=\"label-value\" htmlFor=\"method\">\n            Pagamento:\n            <select\n              className=\"method-input\"\n              data-testid=\"method-input\"\n              id=\"method\"\n              value={ method }\n              onChange={ this.onInputChange }\n            >\n              <option value=\"Dinheiro\">Dinheiro</option>\n              <option value=\"Cartão de crédito\">Cartão de crédito</option>\n              <option value=\"Cartão de débito\">Cartão de débito</option>\n            </select>\n          </label>\n          <label className=\"label-value\" htmlFor=\"tag\">\n            Categoria:\n            <select\n              className=\"tag-input\"\n              data-testid=\"tag-input\"\n              id=\"tag\"\n              value={ tag }\n              onChange={ this.onInputChange }\n            >\n              <option value=\"Alimentação\">Alimentação</option>\n              <option value=\"Lazer\">Lazer</option>\n              <option value=\"Trabalho\">Trabalho</option>\n              <option value=\"Transporte\">Transporte</option>\n              <option value=\"Saúde\">Saúde</option>\n            </select>\n          </label>\n          <label className=\"label-value\" htmlFor=\"description\">\n            Descrição:\n            <input\n              className=\"description-input\"\n              data-testid=\"description-input\"\n              id=\"description\"\n              type=\"text\"\n              value={ description }\n              onChange={ this.onInputChange }\n            />\n          </label>\n          { buttonExpenses\n            ? (\n              <button\n                className=\"button-add-edit\"\n                type=\"button\"\n                onClick={ this.handleClick }\n              >\n                Adicionar despesa\n              </button>)\n            : (\n              <button\n                className=\"button-add-edit\"\n                type=\"button\"\n                onClick={ this.editClick }\n              >\n                Editar despesa\n\n              </button>\n            )}\n        </form>\n        <Table />\n      </div>\n    );\n  }\n}\n\nExpensesForm.propTypes = {\n  currencies: PropTypes.array,\n  expenses: PropTypes.array,\n  buttonExpenses: PropTypes.bool,\n  editId: PropTypes.number,\n}.isRequired;\n\nconst mapDispatchToProps = (dispatch) => ({\n  expense: (value) => dispatch(actionExpense(value)),\n  update: (value) => dispatch(updateInfos(value)),\n});\n\nconst mapStateToProps = (state) => ({\n  currencies: state.wallet.currencies,\n  expenses: state.wallet.expenses,\n  buttonExpenses: state.wallet.buttonExpenses,\n  editId: state.wallet.editId,\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ExpensesForm);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport Header from '../Componente/Header';\nimport { fecthAPI } from '../actions';\nimport ExpensesForm from '../Componente/ExpensesForm';\nimport './Wallet.css';\n\nclass Wallet extends React.Component {\n  componentDidMount() {\n    const { currencies } = this.props;\n    currencies();\n  }\n\n  render() {\n    return (\n      <div className=\"wallet\">\n        <Header />\n        <ExpensesForm />\n      </div>\n    );\n  }\n}\n\nWallet.propTypes = {\n  currencies: PropTypes.array,\n}.isRequired;\n\nconst mapDispatchToProps = (dispatch) => ({\n  currencies: () => dispatch(fecthAPI()),\n});\n\nexport default connect(null, mapDispatchToProps)(Wallet);\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport Login from './pages/Login';\nimport Wallet from './pages/Wallet';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div>\n      <Switch>\n        <Route exact path=\"/\" component={ Login } />\n        <Route path=\"/carteira\" component={ Wallet } />\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","// Esse reducer será responsável por tratar as informações da pessoa usuária\nimport { NEW_ACTION } from '../actions';\n\nconst INITIAL_STATE = {\n  email: '',\n};\n\nfunction user(state = INITIAL_STATE, action) {\n  switch (action.type) {\n  case NEW_ACTION:\n    return { ...state, email: action.state };\n  default:\n    return state;\n  }\n}\n\nexport default user;\n","import { GET_CURRENCIES, NEW_EXPENSES, DELETE, EDIT, UPDATE_INFOS } from '../actions';\n\n// Esse reducer será responsável por tratar o todas as informações relacionadas as despesas\nconst INITIAL_STATE = {\n  currencies: [],\n  expenses: [],\n  buttonExpenses: true,\n  editId: 0,\n};\n\nfunction wallet(state = INITIAL_STATE, action) {\n  switch (action.type) {\n  case GET_CURRENCIES:\n    return {\n      ...state,\n      currencies: action.state,\n    };\n  case NEW_EXPENSES:\n    return {\n      ...state,\n      expenses: [...state.expenses, action.state],\n    };\n  case DELETE:\n    return {\n      ...state,\n      expenses: action.state,\n    };\n  case EDIT:\n    return {\n      ...state,\n      buttonExpenses: false,\n      editId: action.id,\n    };\n  case UPDATE_INFOS:\n    return {\n      ...state,\n      buttonExpenses: true,\n      expenses: action.state,\n    };\n  default:\n    return state;\n  }\n}\n\nexport default wallet;\n","// import user from './user';\nimport { combineReducers } from 'redux';\nimport user from './user';\n// import wallet from './wallet';\nimport wallet from './wallet';\n\n// Configure os seus reducers.\nconst rootReducer = combineReducers({ user, wallet });\n// ATENÇÃO: você obrigatoriamente tem que utilizar as chaves \"user\" e \"wallet\" no seu estado global\n\nexport default rootReducer;\n","import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport reducer from '../reducers';\n\nconst store = createStore(\n  reducer,\n  composeWithDevTools(\n    applyMiddleware(thunk),\n  ),\n);\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport store from './store/index';\n\nReactDOM.render(\n  <BrowserRouter>\n    <Provider store={ store }>\n      <App />\n    </Provider>\n  </BrowserRouter>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}